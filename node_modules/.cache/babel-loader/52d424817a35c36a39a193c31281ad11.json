{"ast":null,"code":"var _jsxFileName = \"/Users/shamim/Documents/robot-friends/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Counter from '../components/ButtonCounter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // constructor() {\n  //     super()\n  //     this.state = {\n  //         robots: [],\n  //         searchfield: ''\n  //     }\n  // }\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(''); // componentDidMount() {\n  //     fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => this.setState({ robots: users}));\n  // }\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      setRobots(users);\n    });\n  }, []);\n\n  const onSearchChange = event => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          robots: filteredRobots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 17\n  }, this);\n}\n\n_s(App, \"8n8f00woG7LQoyKPX0vmRHumRPQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shamim/Documents/robot-friends/src/containers/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","ErrorBoundry","Counter","App","robots","setRobots","searchfield","setSearchfield","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C,CATW,CAWX;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADrB,EAEKF,IAFL,CAEUG,KAAK,IAAI;AAACP,MAAAA,SAAS,CAACO,KAAD,CAAT;AAAiB,KAFrC;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAEH,GAHD;;AAMA,QAAMC,cAAc,GAAGb,MAAM,CAACc,MAAP,CAAcC,KAAK,IAAG;AAC7C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkChB,WAAW,CAACe,WAAZ,EAAlC,CAAP;AACC,GAFsB,CAAvB;AAII,SAAO,CAACjB,MAAM,CAACmB,MAAR,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,gBAGC;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEV;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAA,6BACI,QAAC,YAAD;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAgBC;;GAjDAd,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Counter from '../components/ButtonCounter';\n\n\nfunction App() {\n    // constructor() {\n    //     super()\n    //     this.state = {\n    //         robots: [],\n    //         searchfield: ''\n    //     }\n    // }\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n\n    // componentDidMount() {\n    //     fetch('https://jsonplaceholder.typicode.com/users')\n    //     .then(response=> response.json())\n    //     .then(users => this.setState({ robots: users}));\n    // }\n\n    useEffect(()=> {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=> response.json())\n            .then(users => {setRobots(users)});\n    }, [])\n\n    const onSearchChange = (event) => {\n        setSearchfield(event.target.value)\n        \n    }\n\n    \n    const filteredRobots = robots.filter(robot =>{\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n\n        return !robots.length ?\n            <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    \n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n                \n            );\n           \n        }\n    \n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}